Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mulsi3.o)
                              fat.o (__mulsi3)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodhi4.o)
                              fat.o (__udivmodhi4)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_divmodhi4.o)
                              fat.o (__divmodhi4)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodsi4.o)
                              fat.o (__udivmodsi4)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtm1280.o (exit)
/usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_clear_bss.o)
                              fat.o (__do_clear_bss)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strcmp_P.o)
                              main.o (strcmp_P)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strncmp_P.o)
                              main.o (strncmp_P)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(memcpy.o)
                              fat.o (memcpy)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(memset.o)
                              fat.o (memset)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strchr.o)
                              fat.o (strchr)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strcmp.o)
                              fat.o (strcmp)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strncmp.o)
                              fat.o (strncmp)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strncpy.o)
                              fat.o (strncpy)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strrchr.o)
                              fat.o (strrchr)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800200
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtm1280.o
LOAD byteordering.o
LOAD fat.o
LOAD main.o
LOAD partition.o
LOAD sd_raw.o
LOAD uart.o
LOAD /tmp/cc65kqTq.o
LOAD /tmp/ccHuFLOw.o
LOAD /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x3b02
 *(.vectors)
 .vectors       0x00000000       0xe4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtm1280.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x000000e4      0x1db main.o
                0x000002c0                . = ALIGN (0x2)
 *fill*         0x000002bf        0x1 00
                0x000002c0                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000002c0        0x0 linker stubs
 *(.trampolines*)
                0x000002c0                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000002c0                __ctors_start = .
 *(.ctors)
                0x000002c0                __ctors_end = .
                0x000002c0                __dtors_start = .
 *(.dtors)
                0x000002c0                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000002c0        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtm1280.o
                0x000002c0                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000002c0        0xc /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtm1280.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000002cc       0x1a /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtm1280.o
                0x000002cc                __do_copy_data
 .init4         0x000002e6       0x10 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_clear_bss.o)
                0x000002e6                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000002f6        0x8 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtm1280.o
 *(.init9)
 *(.text)
 .text          0x000002fe        0x4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtm1280.o
                0x000002fe                __vector_38
                0x000002fe                __vector_22
                0x000002fe                __vector_28
                0x000002fe                __vector_1
                0x000002fe                __vector_32
                0x000002fe                __vector_34
                0x000002fe                __vector_24
                0x000002fe                __vector_12
                0x000002fe                __vector_55
                0x000002fe                __vector_46
                0x000002fe                __bad_interrupt
                0x000002fe                __vector_6
                0x000002fe                __vector_31
                0x000002fe                __vector_35
                0x000002fe                __vector_39
                0x000002fe                __vector_3
                0x000002fe                __vector_23
                0x000002fe                __vector_30
                0x000002fe                __vector_45
                0x000002fe                __vector_11
                0x000002fe                __vector_54
                0x000002fe                __vector_13
                0x000002fe                __vector_17
                0x000002fe                __vector_19
                0x000002fe                __vector_56
                0x000002fe                __vector_7
                0x000002fe                __vector_49
                0x000002fe                __vector_41
                0x000002fe                __vector_43
                0x000002fe                __vector_27
                0x000002fe                __vector_5
                0x000002fe                __vector_33
                0x000002fe                __vector_47
                0x000002fe                __vector_52
                0x000002fe                __vector_37
                0x000002fe                __vector_4
                0x000002fe                __vector_44
                0x000002fe                __vector_51
                0x000002fe                __vector_9
                0x000002fe                __vector_2
                0x000002fe                __vector_21
                0x000002fe                __vector_15
                0x000002fe                __vector_36
                0x000002fe                __vector_29
                0x000002fe                __vector_40
                0x000002fe                __vector_8
                0x000002fe                __vector_26
                0x000002fe                __vector_48
                0x000002fe                __vector_14
                0x000002fe                __vector_53
                0x000002fe                __vector_10
                0x000002fe                __vector_50
                0x000002fe                __vector_16
                0x000002fe                __vector_18
                0x000002fe                __vector_20
                0x000002fe                __vector_42
 .text          0x00000302        0x0 byteordering.o
 .text          0x00000302     0x1fe2 fat.o
                0x00000302                fat_close
                0x00000650                fat_close_file
                0x0000065c                fat_read_file
                0x000008f0                fat_close_dir
                0x000008fc                fat_reset_dir
                0x00000916                fat_delete_file
                0x00000a1a                fat_get_fs_size
                0x00000a58                fat_get_fs_free
                0x00000c74                fat_read_dir
                0x0000108c                fat_open
                0x000018a2                fat_create_dir
                0x00001a20                fat_create_file
                0x00001ae8                fat_resize_file
                0x00001d2a                fat_seek_file
                0x00001de2                fat_write_file
                0x000020dc                fat_open_dir
                0x00002156                fat_open_file
                0x000021c2                fat_get_dir_entry_of_path
 .text          0x000022e4      0x704 main.o
                0x00002538                main
 .text          0x000029e8      0x1c8 partition.o
                0x000029e8                partition_close
                0x000029f8                partition_open
 .text          0x00002bb0      0x966 sd_raw.o
                0x00002bb0                sd_raw_available
                0x00002bbc                sd_raw_locked
                0x00002c90                sd_raw_sync
                0x00002c94                unselect_card
                0x00002c9e                select_card
                0x00002ca8                sd_raw_get_info
                0x00002efc                sd_raw_read
                0x00003080                sd_raw_read_interval
                0x00003160                sd_raw_write
                0x00003308                sd_raw_write_interval
                0x000033be                configure_pin_ss
                0x000033c4                sd_raw_init
 .text          0x00003516      0x258 uart.o
                0x00003516                uart_init
                0x0000352e                uart_putc
                0x0000354c                uart_putc_hex
                0x00003584                uart_putw_hex
                0x00003598                uart_putdw_hex
                0x000035be                uart_putw_dec
                0x0000363a                uart_putdw_dec
                0x0000370c                uart_puts
                0x00003726                uart_puts_p
                0x00003742                uart_getc
                0x0000376c                __vector_25
 .text          0x0000376e       0x68 /tmp/cc65kqTq.o
                0x0000376e                CSSelectDevice
                0x000037c8                initSelect
 .text          0x000037d6      0x192 /tmp/ccHuFLOw.o
                0x000037d6                muxSetEnabled
                0x000037e6                muxSelect
                0x000038b6                initDemux
                0x00003906                testDemux
 .text          0x00003968        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mulsi3.o)
 .text          0x00003968        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodhi4.o)
 .text          0x00003968        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_divmodhi4.o)
 .text          0x00003968        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodsi4.o)
 .text          0x00003968        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_exit.o)
 .text          0x00003968        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_clear_bss.o)
 .text          0x00003968        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strcmp_P.o)
 .text          0x00003968        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strncmp_P.o)
 .text          0x00003968        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(memcpy.o)
 .text          0x00003968        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(memset.o)
 .text          0x00003968        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strchr.o)
 .text          0x00003968        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strcmp.o)
 .text          0x00003968        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strncmp.o)
 .text          0x00003968        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strncpy.o)
 .text          0x00003968        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strrchr.o)
                0x00003968                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00003968       0x3e /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mulsi3.o)
                0x00003968                __mulsi3
 .text.libgcc   0x000039a6       0x28 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodhi4.o)
                0x000039a6                __udivmodhi4
 .text.libgcc   0x000039ce       0x26 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_divmodhi4.o)
                0x000039ce                __divmodhi4
                0x000039ce                _div
 .text.libgcc   0x000039f4       0x44 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodsi4.o)
                0x000039f4                __udivmodsi4
 .text.libgcc   0x00003a38        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x00003a38        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00003a38       0x12 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strcmp_P.o)
                0x00003a38                strcmp_P
 .text.avr-libc
                0x00003a4a       0x1c /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strncmp_P.o)
                0x00003a4a                strncmp_P
 .text.avr-libc
                0x00003a66       0x12 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(memcpy.o)
                0x00003a66                memcpy
 .text.avr-libc
                0x00003a78        0xe /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(memset.o)
                0x00003a78                memset
 .text.avr-libc
                0x00003a86       0x16 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strchr.o)
                0x00003a86                strchr
 .text.avr-libc
                0x00003a9c       0x12 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strcmp.o)
                0x00003a9c                strcmp
 .text.avr-libc
                0x00003aae       0x1c /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strncmp.o)
                0x00003aae                strncmp
 .text.avr-libc
                0x00003aca       0x1e /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strncpy.o)
                0x00003aca                strncpy
 .text.avr-libc
                0x00003ae8       0x16 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strrchr.o)
                0x00003ae8                strrchr
                0x00003afe                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00003afe        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_exit.o)
                0x00003afe                exit
                0x00003afe                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00003afe        0x4 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x00003b02                _etext = .

.data           0x00800200       0x10 load address 0x00003b02
                0x00800200                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800200        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtm1280.o
 .data          0x00800200        0x0 byteordering.o
 .data          0x00800200        0xd fat.o
 .data          0x0080020d        0x2 main.o
 .data          0x0080020f        0x0 partition.o
 .data          0x0080020f        0x0 sd_raw.o
 .data          0x0080020f        0x0 uart.o
 .data          0x0080020f        0x0 /tmp/cc65kqTq.o
 .data          0x0080020f        0x0 /tmp/ccHuFLOw.o
 .data          0x0080020f        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mulsi3.o)
 .data          0x0080020f        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodhi4.o)
 .data          0x0080020f        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_divmodhi4.o)
 .data          0x0080020f        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodsi4.o)
 .data          0x0080020f        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_exit.o)
 .data          0x0080020f        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_clear_bss.o)
 .data          0x0080020f        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strcmp_P.o)
 .data          0x0080020f        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strncmp_P.o)
 .data          0x0080020f        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(memcpy.o)
 .data          0x0080020f        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(memset.o)
 .data          0x0080020f        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strchr.o)
 .data          0x0080020f        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strcmp.o)
 .data          0x0080020f        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strncmp.o)
 .data          0x0080020f        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strncpy.o)
 .data          0x0080020f        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strrchr.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800210                . = ALIGN (0x2)
 *fill*         0x0080020f        0x1 00
                0x00800210                _edata = .
                0x00800210                PROVIDE (__data_end, .)

.bss            0x00800210      0x2c7
                0x00800210                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800210        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtm1280.o
 .bss           0x00800210        0x0 byteordering.o
 .bss           0x00800210       0xb1 fat.o
 .bss           0x008002c1        0x0 main.o
 .bss           0x008002c1       0x11 partition.o
 .bss           0x008002d2      0x205 sd_raw.o
 .bss           0x008004d7        0x0 uart.o
 .bss           0x008004d7        0x0 /tmp/cc65kqTq.o
 .bss           0x008004d7        0x0 /tmp/ccHuFLOw.o
 .bss           0x008004d7        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_mulsi3.o)
 .bss           0x008004d7        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodhi4.o)
 .bss           0x008004d7        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_divmodhi4.o)
 .bss           0x008004d7        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_udivmodsi4.o)
 .bss           0x008004d7        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_exit.o)
 .bss           0x008004d7        0x0 /usr/lib/gcc/avr/4.3.5/avr51/libgcc.a(_clear_bss.o)
 .bss           0x008004d7        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strcmp_P.o)
 .bss           0x008004d7        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strncmp_P.o)
 .bss           0x008004d7        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(memcpy.o)
 .bss           0x008004d7        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(memset.o)
 .bss           0x008004d7        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strchr.o)
 .bss           0x008004d7        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strcmp.o)
 .bss           0x008004d7        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strncmp.o)
 .bss           0x008004d7        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strncpy.o)
 .bss           0x008004d7        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strrchr.o)
 *(.bss*)
 *(COMMON)
                0x008004d7                PROVIDE (__bss_end, .)
                0x00003b02                __data_load_start = LOADADDR (.data)
                0x00003b12                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008004d7        0x0
                0x008004d7                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008004d7                PROVIDE (__noinit_end, .)
                0x008004d7                _end = .
                0x008004d7                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x7284
 *(.stab)
 .stab          0x00000000      0x750 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtm1280.o
 .stab          0x00000750      0x264 byteordering.o
                                0x270 (size before relaxing)
 .stab          0x000009b4     0x2cc4 fat.o
                               0x2e38 (size before relaxing)
 .stab          0x00003678      0xfa8 main.o
                               0x11dc (size before relaxing)
 .stab          0x00004620      0x300 partition.o
                                0x504 (size before relaxing)
 .stab          0x00004920     0x1494 sd_raw.o
                               0x1704 (size before relaxing)
 .stab          0x00005db4      0x828 uart.o
                                0xa80 (size before relaxing)
 .stab          0x000065dc      0x294 /tmp/cc65kqTq.o
                                0x4b0 (size before relaxing)
 .stab          0x00006870      0x498 /tmp/ccHuFLOw.o
                                0x6d8 (size before relaxing)
 .stab          0x00006d08       0x84 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strcmp_P.o)
                                 0x90 (size before relaxing)
 .stab          0x00006d8c       0xc0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strncmp_P.o)
                                 0xcc (size before relaxing)
 .stab          0x00006e4c       0x84 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(memcpy.o)
                                 0x90 (size before relaxing)
 .stab          0x00006ed0       0x6c /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(memset.o)
                                 0x78 (size before relaxing)
 .stab          0x00006f3c       0x9c /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strchr.o)
                                 0xa8 (size before relaxing)
 .stab          0x00006fd8       0x84 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strcmp.o)
                                 0x90 (size before relaxing)
 .stab          0x0000705c       0xc0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strncmp.o)
                                 0xcc (size before relaxing)
 .stab          0x0000711c       0xcc /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strncpy.o)
                                 0xd8 (size before relaxing)
 .stab          0x000071e8       0x9c /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/libc.a(strrchr.o)
                                 0xa8 (size before relaxing)

.stabstr        0x00000000     0x2dd1
 *(.stabstr)
 .stabstr       0x00000000     0x2dd1 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr51/crtm1280.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(sd-reader.out elf32-avr)
LOAD linker stubs
